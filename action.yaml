name: "AutomergePR"
author: "Runtime Verification Inc"
branding:
  icon: "git-merge"
  color: "blue"
description: "Merge tracked PR w/ met requirements All Checks Pass, Review Approved,and Up-to-date."
inputs:
  org:
    description: 'Organization name under which to run on'
    required: true
  repo:
    description: 'Repository name under Organization'
    required: true
  token:
    description: 'Access token to be able to write to the repository'
    required: true
  debug:
    description: 'Debug mode'
    required: false
    default: ''
  comment:
    description: 'Use Predefined comment'
    required: false
    default: 'false'
outputs: 
  merged:
    value: ${{ steps.automerge.outputs.merged }}
    description: 'Whether or not the PR was merged'
  error:
    value: ${{ steps.automerge.outputs.error }}
    description: 'Error message if the PR was not merged'
  success:
    value: ${{ steps.automerge.outputs.success }}
    description: 'Success message if the PR was merged'
runs:
  using: 'composite'
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.10.12'
    
    - name: Install dependencies
      shell: bash {0}
      run: pip install logging PyGithub argparse
    
    - name: 'Check out repo: ${{ inputs.org }}/${{ inputs.repo }}'
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.token }}
        repository: ${{ inputs.org }}/${{ inputs.repo }}
        path: tmp-${{ inputs.repo }}
        fetch-depth: 0
    
    - name: 'Run automerger: ${{ inputs.org }}/${{ inputs.repo }}'
      shell: bash {0}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        comment: ${{ inputs.comment }}
      working-directory: tmp-${{ inputs.repo }}
      run: |
        if ${comment} == 'true'; then
          python3 ${{ github.action_path }}/src/automerge.py --org ${{ inputs.org }} --repo ${{ inputs.repo }} --comment ${{ inputs.debug }}
        else
          python3 ${{ github.action_path }}/src/automerge.py --org ${{ inputs.org }} --repo ${{ inputs.repo }} ${{ inputs.debug }}
        fi
        
